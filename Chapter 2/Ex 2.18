(reverse (list 1 4 9 16 25))

(define (append list1 list2)
   (if (null? list1)
         list2
       (cons (car list1) (append (cdr list1) list2))))
  

(define (reverse list)
  (if (null? list)
        '()
      (append (reverse (cdr list)) (car list))))
;; gives (((((0. 25) . 16) . 9) . 4) . 1) because (car list) must be a list
;;right version
(define (reverse lst)
  (if (null? lst)
        '()
      (append (reverse (cdr lst)) (list (car lst)))))
      
