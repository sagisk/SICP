(define (prime-sum-pairs n)
 (map make-pair-sum
 (filter prime-sum?
 (flatmap
 (lambda (i)
 (map (lambda (j) (list i j))
 (enumerate-interval 1 (- i 1))))
 (enumerate-interval 1 n)))))
 
(define (ordered-triples-sum n s)
  (map make-triple-sum
    (flatmap
      (lambda(i)
      (flatmap (lambda(j)
             (map (lambda k) (list i j k))))
             (enumerate-interval 1 (- j 1)))) 
                  (enumerate-interval 1 (- i 1)))) 
             (enumerate-interval 1 n)))) 
