(define (make-sum-list item) 
      (if (= (length itme) 2)
        (list '+ (car item) (cdr item))
        (make-sum (car item) (make-sum-list (cdr item)))))
(define (make-product m1 m2) 
      (if (= (length itme) 2)
         (list '* m1 m2))
        (make-product (car item) (make-product-list (cdr item)))))
        
(define (augend s) 
   (let ((a (cddr s))) 
     (if (= (length a) 1) 
         (car a) 
         (make-sum-list a)))) 
 (define (multiplicand p) 
   (let ((m (cddr p))) 
     (if (= (length m) 1) 
         (car m) 
         (make-product-list m))))
