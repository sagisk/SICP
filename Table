(define (lookup key table)
 (let ((record (assoc key (cdr table))))
     (if record
         (cdr record);; if key is present return value of key-value pair
         false)))
(define (assoc key records);; if key is present then return key-value pair else search in the cdr
 (cond ((null? records) false)
 ((equal? key (caar records)) (car records))
 (else (assoc key (cdr records)))))

(define (insert! key value table)
 (let ((record (assoc key (cdr table))))
   (if record
      (set-cdr! record value)
     (set-cdr! table
               (cons (cons key value) (cdr table)))))
 'ok)
 
 
 (define (make-table)
 (list '*table*))
(define operation-table (make-table))
(define get (operation-table 'lookup-proc))
(define put (operation-table 'insert-proc!))
