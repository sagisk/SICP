(define (append! x y)
 (set-cdr! (last-pair x) y)
 x)
 
 (define (last-pair x)
  (if (null? (cdr x))
          x
    (last-pair (cdr x))))
    
    
(define x (list 'a 'b))
(define y (list 'c 'd))
(define z (append x y))
(cdr x) -- gives (b)
|a| |->|b| |->|c| |->|d|/|

(define w (append! x y))
takes the last value of x (in this case d) and replace it with the value of y
|a| |->|b| |->|c| |->|d|/|
          |           |
          -------------
          
  (cdr x)
  (b c d)

