(define (interleave s1 s2)
 (if (stream-null? s1)
 s2
 (cons-stream (stream-car s1)
 (interleave s2 (stream-cdr s1)))))

(define (all-pairs s t)
        (cons-stream 
                (list (stream-car s) (stream-car t))
                (interleave
                        (interleave
                                (stream-map (lambda (x) (list (stream-car s) x))
                                                        (stream-cdr t));;gives s0t1,s0t2...
                                (all-pairs (stream-cdr s) (stream-cdr t)))
                        (stream-map (lambda (x) (list x (stream-car t)))
                                                (stream-cdr s)))));;gives s1t0,s2t0,...
